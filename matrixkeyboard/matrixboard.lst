C51 COMPILER V9.00   MATRIXBOARD                                                           04/29/2015 20:03:06 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MATRIXBOARD
OBJECT MODULE PLACED IN .\output\matrixboard.obj
COMPILER INVOKED BY: F:\keil_for_51\C51\BIN\C51.EXE user\matrixboard.c BROWSE DEBUG OBJECTEXTEND PRINT(.\matrixboard.lst
                    -) OBJECT(.\output\matrixboard.obj)

line level    source

   1          #include<reg52.h>
   2          #include"delay_on.h"
   3          
   4          sbit seg_lock=P3^7;                     //数码管段选开关
   5          
   6          uchar code bit_select[8] = {0,1,2,3,4,5,6,7};           //送P2口位选
   7          uchar code seg_table[]={
   8          0x3f,0x06,0x5b,0x4f,
   9          0x66,0x6d,0x7d,0x07,
  10          0x7f,0x6f,0x77,0x7c,
  11          0x39,0x5e,0x79,0x71};
  12          
  13          void display(uchar key)
  14          {
  15   1              P0 = seg_table[key];
  16   1              seg_lock = 1;
  17   1              seg_lock = 0;
  18   1      }
  19          
  20          void matrixkeyscan()
  21          {
  22   1              uchar temp, key;
  23   1              P1 = 0xfe;                                              //给第一行低电平
  24   1              temp = P1;
  25   1              temp &= 0xf0;                                   //
  26   1              if(temp!=0xf0){                                 //判断高四位死否有0（列数）（是否有按键按下）
  27   2                      delay_on(5);                            //消除抖动
  28   2                      temp = P1;
  29   2                      temp &= 0xf0;
  30   2                      if(temp!=0xf0){                         //确定按键按下
  31   3                              temp = P1;                              //有按键按下
  32   3                              switch(temp){                   //确定按键具体是哪一个
  33   4                                      case 0xee:      
  34   4                                              key = 0;
  35   4                                              break;
  36   4                                      case 0xde:
  37   4                                              key = 1;
  38   4                                              break;
  39   4                                      case 0xbe:
  40   4                                              key = 2;
  41   4                                              break;
  42   4                                      case 0x7e:
  43   4                                              key = 3;
  44   4                                              break;
  45   4                              }
  46   3                              while(temp!=0xf0){                              //等待按键释放
  47   4                                      temp = P1;
  48   4                                      temp &= 0xf0;
  49   4                              }
  50   3                              display(key);           //显示按键多对应懂得值
  51   3                      }
  52   2              }
  53   1      
  54   1              P1 = 0xfd;                                              //给第二行低电平
C51 COMPILER V9.00   MATRIXBOARD                                                           04/29/2015 20:03:06 PAGE 2   

  55   1              temp = P1;
  56   1              temp &= 0xf0;                                   //
  57   1              if(temp!=0xf0){                                 //判断高四位死否有0（列数）（是否有按键按下）
  58   2                      delay_on(5);                            //消除抖动
  59   2                      temp = P1;
  60   2                      temp &= 0xf0;
  61   2                      if(temp!=0xf0){                         //确定按键按下
  62   3                              temp = P1;                              //有按键按下
  63   3                              switch(temp){                   //确定按键具体是哪一个
  64   4                                      case 0xed:      
  65   4                                              key = 4;
  66   4                                              break;
  67   4                                      case 0xdd:
  68   4                                              key = 5;
  69   4                                              break;
  70   4                                      case 0xbd:
  71   4                                              key = 6;
  72   4                                              break;
  73   4                                      case 0x7d:
  74   4                                              key = 7;
  75   4                                              break;
  76   4                              }
  77   3                              while(temp!=0xf0){                              //等待按键释放
  78   4                                      temp = P1;
  79   4                                      temp &= 0xf0;
  80   4                              }
  81   3                              display(key);           //显示按键多对应懂得值
  82   3                      }
  83   2              }
  84   1      
  85   1              P1 = 0xfb;                                              //给第三行低电平
  86   1              temp = P1;
  87   1              temp &= 0xf0;                                   //
  88   1              if(temp!=0xf0){                                 //判断高四位死否有0（列数）（是否有按键按下）
  89   2                      delay_on(5);                            //消除抖动
  90   2                      temp = P1;
  91   2                      temp &= 0xf0;
  92   2                      if(temp!=0xf0){                         //确定按键按下
  93   3                              temp = P1;                              //有按键按下
  94   3                              switch(temp){                   //确定按键具体是哪一个
  95   4                                      case 0xeb:      
  96   4                                              key = 8;
  97   4                                              break;
  98   4                                      case 0xdb:
  99   4                                              key = 9;
 100   4                                              break;
 101   4                                      case 0xbb:
 102   4                                              key = 10;
 103   4                                              break;
 104   4                                      case 0x7b:
 105   4                                              key = 11;
 106   4                                              break;
 107   4                              }
 108   3                              while(temp!=0xf0){                              //等待按键释放
 109   4                                      temp = P1;
 110   4                                      temp &= 0xf0;
 111   4                              }
 112   3                              display(key);           //显示按键多对应懂得值
 113   3                      }
 114   2              }
 115   1      
 116   1              P1 = 0xf7;                                              //给第四行低电平
C51 COMPILER V9.00   MATRIXBOARD                                                           04/29/2015 20:03:06 PAGE 3   

 117   1              temp = P1;
 118   1              temp &= 0xf0;                                   //
 119   1              if(temp!=0xf0){                                 //判断高四位死否有0（列数）（是否有按键按下）
 120   2                      delay_on(5);                            //消除抖动
 121   2                      temp = P1;
 122   2                      temp &= 0xf0;
 123   2                      if(temp!=0xf0){                         //确定按键按下
 124   3                              temp = P1;                              //有按键按下
 125   3                              switch(temp){                   //确定按键具体是哪一个
 126   4                                      case 0xe7:      
 127   4                                              key = 12;
 128   4                                              break;
 129   4                                      case 0xd7:
 130   4                                              key = 13;
 131   4                                              break;
 132   4                                      case 0xb7:
 133   4                                              key = 14;
 134   4                                              break;
 135   4                                      case 0x77:
 136   4                                              key = 15;
 137   4                                              break;
 138   4                              }
 139   3                              while(temp!=0xf0){                              //等待按键释放
 140   4                                      temp = P1;
 141   4                                      temp &= 0xf0;
 142   4                              }
 143   3                              display(key);           //显示按键多对应懂得值
 144   3                      }
 145   2              }
 146   1      }
 147          
 148          void main()
 149          {
 150   1              
 151   1              P0 = 0;
 152   1              seg_lock = 1;
 153   1              seg_lock = 0;
 154   1              P2 = bit_select[0];                             //选中第一个数码管
 155   1              while(1){
 156   2                      matrixkeyscan();
 157   2              }
 158   1      }
 159          
 160          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    399    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
